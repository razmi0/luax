local CUR_DATE                    = os.date("%Y-%m-%d %H:%M:%S")
local TRANSPILER_VERSION          = "0.0.1"
local LICENCE                     = "NO LICENCE"
local AUTHOR                      = "razmi0"
local REPO_LINK                   = "https://github.com/razmi0/luax"
local INTRO                       = {
    "THIS CODE IS GENERATED BY LUAX TRANSPILER",
    "GENERATED AT: " .. CUR_DATE,
    "TRANSPILER VERSION: " .. TRANSPILER_VERSION,
    "AUTHOR: " .. AUTHOR,
    "LICENCE: " .. LICENCE,
    "REPO: " .. REPO_LINK,
}

local LUAX_MAP_HELPER_PREAMBLE    =
[[
local function map(tbl, func)
    local newTbl = {}
    for i, v in ipairs(tbl) do
        table.insert(newTbl, func(v, i, tbl))
    end
    return table.concat(newTbl)
end
]]

local LUAX_FILTER_HELPER_PREAMBLE =
[[
local function filter(tbl, func)
    local newTbl = {}
    for i, v in ipairs(tbl) do
        if func(v, i, tbl) then
        table.insert(newTbl, v)
        end
    end
    return table.concat(newTbl)
end
]]

local function format_header(comments)
    local acc = { "\n" }
    for _, comment in ipairs(comments) do
        acc[#acc + 1] = "-- " .. comment
    end
    acc[#acc + 1] = "\n"
    return table.concat(acc, "\n")
end

---@param config TranspilerConfig
local function compose(content, config, ...)
    local cbs = { ... }
    -- inject headers
    local injected = {
        format_header(INTRO),
        "local " .. config.RENDER_FUNCTION_NAME ..
        "= require(\"" .. config.RENDER_FUNCTION_PATH .. "\")\n"
    }
    if content:match(">.-{.-map%(.-%)") then
        injected[#injected + 1] = LUAX_MAP_HELPER_PREAMBLE
    end
    if content:match(">.-{.-filter%(.-%)") then
        injected[#injected + 1] = LUAX_FILTER_HELPER_PREAMBLE
    end
    -- inject composed
    local composed = injected
    for _, cb in ipairs(cbs) do
        composed = cb(composed, content, config)
    end
    return composed
end

return compose
