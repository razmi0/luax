local format_header = require("lib.luax.utils.format_header")
local get_helper    = require("lib.luax.transpiler.luax_helpers")

--- Return the composition of preambles, headers, luax functions and transpiled content together in a string[]
---@param content string
---@param config TranspilerConfig
---@param cb fun(composed : table<string>, content : string, config : TranspilerConfig)
---@return string[]
local function compose(content, config, cb)
    local composed = {
        format_header({
            "THIS CODE IS GENERATED BY LUAX TRANSPILER",
            "GENERATED AT: " .. config.DATE,
            "TRANSPILER VERSION: " .. config.TRANSPILER_VERSION,
            "AUTHOR: " .. config.AUTHOR,
            "LICENCE: " .. config.LICENCE,
            "REPO: " .. config.REPO_LINK,
        }),
        "local " .. config.RENDER_FUNCTION_NAME ..
        "= require(\"" .. config.RENDER_FUNCTION_PATH .. "\")\n"
    }
    if content:match(">.-{.-map%(.-%)") then
        composed[#composed + 1] = get_helper("map")
    end
    if content:match(">.-{.-filter%(.-%)") then
        composed[#composed + 1] = get_helper("filter")
    end

    cb(composed, content, config)

    return composed
end

return compose
